class Solution {
    typedef long long ll;
public:
        int mod=1e9+7;
        ll helper(int i,string& s,vector<ll>&dp){
        if(i>=s.length())return 1;
        if(dp[i]!=-1)return dp[i];
        if(s[i]=='0')return 0;
        ll cnt=0,mult=1;
        if(s[i]=='*')mult=9;
       cnt+=mult*helper(i+1,s,dp)%mod;
       if(i+1<s.length()){//*,any
        ll opr=0;
        if(s[i]=='*'){//*
            if(s[i+1]=='*')opr=15;
            else{//number
                if(s[i+1]<='6')opr=2;
                else
                opr=1;
            }
        }
        else if(s[i]<'3'){//num,*
        if(s[i+1]=='*'){
            if(s[i]=='1')opr=9;
            else if(s[i]=='2')opr=6;
        }
        else if(stoi(s.substr(i,2))<=26){
            opr=1;
        }
        }
        if(opr)
        cnt+=opr*helper(i+2,s,dp)%mod;
       }
       return dp[i]=cnt%mod;
    }
    int numDecodings(string s) {
       int n=s.length();
       vector<ll>dp(n,-1);
       return helper(0,s,dp);
    }
};
